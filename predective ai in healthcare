# Chronic Disease Prediction with Gemini API and FHIR Integration

import requests
import json

# Google Gemini API Endpoint (Hypothetical Example)
GEMINI_API_URL = "https://api.google.com/gemini/v1/predict"

# Google Cloud FHIR API Endpoint
FHIR_API_URL = "https://healthcare.googleapis.com/v1/projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/datasets/YOUR_DATASET/fhirStores/YOUR_FHIR_STORE/fhir"

# Google Cloud Authentication (use service account)
headers = {
    "Authorization": "Bearer YOUR_ACCESS_TOKEN",
    "Content-Type": "application/json"
}

def get_patient_data(patient_id):
    """Fetch patient data from Google Cloud FHIR API."""
    response = requests.get(f"{FHIR_API_URL}/Patient/{patient_id}", headers=headers)
    return response.json() if response.status_code == 200 else None

def predict_chronic_disease(patient_data):
    """Send patient data to Gemini API for chronic disease prediction."""
    payload = {
        "inputs": {
            "text": json.dumps(patient_data)
        }
    }
    response = requests.post(GEMINI_API_URL, headers=headers, json=payload)
    return response.json() if response.status_code == 200 else None

def store_prediction(patient_id, prediction):
    """Store the prediction back into the FHIR system as an Observation."""
    observation = {
        "resourceType": "Observation",
        "status": "final",
        "category": [{"coding": [{"system": "http://terminology.hl7.org/CodeSystem/observation-category", "code": "laboratory"}]}],
        "code": {
            "coding": [{"system": "http://loinc.org", "code": "72166-2", "display": "Chronic Disease Risk"}]
        },
        "subject": {"reference": f"Patient/{patient_id}"},
        "valueString": prediction["result"]
    }

    response = requests.post(f"{FHIR_API_URL}/Observation", headers=headers, json=observation)
    return response.json() if response.status_code == 201 else None

if __name__ == "__main__":
    patient_id = "123456"

    # Step 1: Fetch Patient Data
    patient_data = get_patient_data(patient_id)

    if patient_data:
        print("Patient Data Retrieved:", patient_data)

        # Step 2: Predict Chronic Disease Risk
        prediction = predict_chronic_disease(patient_data)

        if prediction:
            print("Prediction Result:", prediction)

            # Step 3: Store Prediction in FHIR
            result = store_prediction(patient_id, prediction)

            if result:
                print("Prediction successfully stored in FHIR:", result)
            else:
                print("Error storing prediction in FHIR.")
        else:
            print("Prediction failed.")
    else:
        print("Patient not found.")
